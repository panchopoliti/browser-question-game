{"version":3,"sources":["Components/Game/css/PlayersNav.module.scss","css/Game.module.scss","Components/Game/css/OptionsInQuestion.module.scss","Components/Game/css/GameWinnersAndTimer.module.scss","Components/Game/css/SettingsModules.module.scss","Components/Game/css/GameSettings.module.scss","Components/Game/css/BelowAnswersContainer.module.scss","Components/Game/css/MobileSideNavBar.module.scss","Components/Generic/css/ErrorMessage.module.scss","Components/Game/css/QuestionText.module.scss","Components/Game/css/Timer.module.scss","Components/Game/css/AnswerStatus.module.scss","Components/Game/css/PlayersNavMobile.module.scss","css/_constants.scss","static/Icons/trophy-solid.svg","static/Icons/chevron-down-solid.svg","static/Icons/chevron-up-solid.svg","static/Icons/cog-solid.svg","Components/Modals/css/GameSettingsModal.module.scss","constants.js","Components/Generic/Switch.js","Components/Generic/ComboBox.js","Components/Generic/ErrorMessage.js","Components/Generic/Button.js","Components/Game/OptionsInQuestion.js","Components/Game/QuestionText.js","Components/Game/Timer.js","Components/Game/GameWinnersAndTimer.js","functions/general-functions.js","Components/Game/AnswerStatus.js","Components/Game/SettingsModules.js","functions/settings-form-functions.js","Components/Game/GameSettings.js","Hooks/app-hooks.js","Components/Game/PlayersNav.js","Components/Game/PlayersNavMobile.js","Components/Game/BelowAnswersContainer.js","Components/Game/MobileSideNavBar.js","Questions/questions.js","functions/question-functions.js","Hooks/game-hooks.js","Components/Modals/Modal.js","Components/Modals/GameSettingsModal.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SECONDS_PER_QUESTION_WITH_TIMER","cssConstants","timerSeconds","SwitchComponent","settings","onColor","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","ComboBox","options","handleSelect","inputId","inputValue","handleOnChange","renderOptions","map","option","i","key","value","onSelect","openOnFocus","id","onChange","persistSelection","ErrorMessage","text","show","className","styles","container","error","hide","Button","onClick","children","OptionsInQuestion","correctOption","isGameFinished","useState","btnClicked","setBtnClicked","targetBtnText","setTargetBtn","listOfOptions","upperCaseText","toUpperCase","isTheCorrectOption","btnClassName","correct","incorrect","button","ev","target","innerText","window","setTimeout","listContainer","QuestionText","bubble","bubbleBottomLeft","StartTimer","initialValue","handler","time","setTimer","isTimerInZero","setTimerInZero","useEffect","timerId","setInterval","nextSecond","clearInterval","numberLength","toString","length","timerContainer","oneNumber","twoNumbers","role","r","cx","cy","Timer","startTimer","handlerForTimeOver","GameWinnersAndTimer","timerSettings","gameWinners","typeOfEndOfGame","winners","winningText","name","winnersClone","slice","lastWinner","pop","players","player","join","getWinningText","typeOfWinnerStyle","tie","Fragment","winnersContainers","src","TrophySVG","alt","height","width","getRandomInt","max","random","Math","floor","AnswerStatus","status","visibility","answerStatusToCamelCase","str","firstLetterLowercase","toLowerCase","splitWords","split","splice","pascalCaseToCamelCase","answerStatusClassName","SettingsModule","title","invalid","errorMessage","boxSetting","boxSettingElement","invalidField","aria-invalid","SettingsModules","settingModules","fields","field","addFurtherProps","prevSettings","moduleFurtherSettings","numberOfPlayers","type","fieldId","aria-labelledby","moduleId","playWithTimer","checked","difficulty","possibleDifficulties","furtherSettings","getModulePropsFromField","settingsContainer","GameSettings","initialPropsFields","isGameStarted","successButtonHandler","cancelButton","titleClassname","stopKeyEventPropagation","containerId","initialObj","fieldStatus","setStatus","setFieldStatus","validationFields","useFieldStatus","typeOfError","createInitialSettingsStatus","fieldStatusArr","fieldsClone","forEach","find","injectFieldStatus","numberOfPlayersValue","playWithTimerValue","difficultyValue","setInputValue","handleChange","useInputState","switchState","setSwitchState","handleSwitch","useSwitchState","comboBoxValue","setValue","handlers","item","useComboBoxState","settingsFieldsInfo","settingFields","settingField","errorMessages","messages","message","setErrorMessage","fieldsValue","settingFieldsValue","didSettingFieldsChange","isEqual","onSuccessClick","validation","args","validationFn","includes","difficultyValidationFn","getValidationArgs","isValidForm","arg","isValid","formStatus","formValidation","returnObj","Promise","resolve","returnedValue","setNewValuesFromInputs","then","newState","onKeyDown","nativeEvent","stopImmediatePropagation","titleContainer","buttonsContainer","PlayersNav","nav","navItem","nameContainer","turn","yourTurn","tooltip","PlayersNavMobile","showPlayersNav","setShowPlayersNav","chevronDown","chevronUp","BelowAnswersContainer","handleModal","restartGame","startAgainContainer","startButton","iconBtn","SettingsSVG","MobileSideNavBar","playerTurn","sideNav","playerNameContainer","playerName","subtitle","listOfQuestions","question","answers","creator","newValue","Object","assign","chooseNextIdQuestion","nextId","usedIds","arrayOfIds","getQuestionsIdsByDifficulties","randomNumber","handleNextQuestion","numOfPlayers","setUsedIds","afterPlayerAnswered","whenGameisFinished","setNextQuestion","isCorrect","getUsedIdsLength","numOfQuestionsPerPlayer","numOfDoneQuestions","getWinners","counterOfCorrectAnswers","arrOfIds","arr","higherNumber","elem","checkArr","indexOf","isDuplicate","arrClone","push","getIdOfHigherNumberOfArray","filter","useHookWithValueAndHandler","Modal","props","closeModalOnKeyPress","closeModal","noop","closeSuccessModal","divToFocus","setDivFocus","element","focusDiv","focus","prevProps","this","modalState","modalValidation","ariaDescribedBy","aria-describedby","ref","tabIndex","Component","defaultProps","GameSettingsModal","modalSettings","alert","Game","setStartGame","nameOfPlayers","playersNames","setNumberOfPlayers","setPlayerNames","initialQuestionId","setModalState","useModalState","questionsIds","initialId","currId","setCurrId","usedQuestionsIds","setUsedQuestionIds","current","alreadyUsed","setCurrent","setAlreadyUsed","resetAlreadyUsed","useQuestionIds","playerNumberTurn","setPlayerNumberTurn","setPlayerTurn","finishedGame","restartTurnCounter","usePlayerTurn","initializeCounter","playersStatusInGame","playerStatus","counter","setCounter","updateCounter","playerId","statusOfAnswer","counterClone","resetCounter","useCounterOfCorrectAnswers","answerStatus","setAnswerStatus","useAnswerStatus","ansStatusVisibility","setAnsStatusVisibility","setStartTimer","setWinners","setGameWinners","restartWinnersGame","useGameWinners","winner","createPlayers","newPlayers","nextQuestionParams","questionText","modalProps","isGameOver","mainContainer","overlay","showOverlay","gameContainer","mobile","notMobile","questionsAndAnswersContainer","names","App","showInitialSettings","setShowInitialSettings","arrayOfDifficultes","array","result","deleteDuplicates","sort","getDifficulties","fieldsObj","keys","createFieldIds","fieldsArray","gameSettingsProps","gameProps","showApp","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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CA,YACA,WACA,WAEF3M,QAAS,EACToG,WAAY,SACZwG,QAAS,KAEX,CACEF,SAAU,qIACVC,QAAS,CACP,aACA,kBACA,yBAEF3M,QAAS,EACToG,WAAY,OACZwG,QAAS,KAEX,CACEF,SAAU,yDACVC,QAAS,CACP,SACA,WACA,UAEF3M,QAAS,EACToG,WAAY,MACZwG,QAAS,KAEX,CACEF,SAAU,oEACVC,QAAS,CACP,WACA,WACA,yBAEF3M,QAAS,EACToG,WAAY,SACZwG,QAAS,KAEX,CACEF,SAAU,iGACVC,QAAS,CACP,6BACA,4BACA,iCACA,yCAEF3M,QAAS,EACToG,WAAY,OACZwG,QAAS,KAEX,CACEF,SAAU,gEACVC,QAAS,CACP,iBACA,iBACA,eACA,eACA,mBAEF3M,QAAS,EACToG,WAAY,OACZwG,QAAS,KAEX,CACEF,SAAU,4GACVC,QAAS,CACP,YACA,YACA,aAEF3M,QAAS,EACToG,WAAY,MACZwG,QAAS,KAEX,CACEF,SAAU,yIACVC,QAAS,CACP,UACA,WACA,qBAEF3M,QAAS,EACToG,WAAY,MACZwG,QAAS,KAEX,CACEF,SAAU,kGACVC,QAAS,CACP,yBACA,yBACA,0BAEF3M,QAAS,EACToG,WAAY,MACZwG,QAAS,KAEX,CACEF,SAAU,4EACVC,QAAS,CACP,qBACA,qBACA,gBACA,0BACA,eAEF3M,QAAS,EACToG,WAAY,OACZwG,QAAS,KAEX,CACEF,SAAU,mFACVC,QAAS,CACP,uBACA,cACA,WAEF3M,QAAS,EACToG,WAAY,SACZwG,QAAS,KAEX,CACEF,SAAU,8DACVC,QAAS,CACP,aACA,UACA,wBACA,YACA,UAEF3M,QAAS,EACToG,WAAY,OACZwG,QAAS,KAEX,CACEF,SAAU,wEACVC,QAAS,CACP,oBACA,WACA,YAEF3M,QAAS,EACToG,WAAY,MACZwG,QAAS,KAEX,CACEF,SAAU,8EACVC,QAAS,CACP,WACA,iBACA,YACA,cACA,WAEF3M,QAAS,EACToG,WAAY,SACZwG,QAAS,KAEX,CACEF,SAAU,yFACVC,QAAS,CACP,KACA,KACA,KACA,MAEF3M,QA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","file":"static/js/main.f3b06f18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"PlayersNav_hide__QCQKY\",\"listContainer\":\"PlayersNav_listContainer__MzCgS\",\"navItem\":\"PlayersNav_navItem__3ZEKS\",\"nameContainer\":\"PlayersNav_nameContainer__2eNyy\",\"name\":\"PlayersNav_name__1bNY-\",\"yourTurn\":\"PlayersNav_yourTurn__23GH2\",\"tooltip\":\"PlayersNav_tooltip__29_Yn\",\"playerTurn\":\"PlayersNav_playerTurn__1qRU2\",\"nameContainer1\":\"PlayersNav_nameContainer1__1FGLl\",\"nameContainer2\":\"PlayersNav_nameContainer2__32y4x\",\"nameContainer3\":\"PlayersNav_nameContainer3__VTt0j\",\"nameContainer4\":\"PlayersNav_nameContainer4__wdkNn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDefaultStyles\":\"Game_buttonDefaultStyles__N978p\",\"startButton\":\"Game_startButton__SsS32\",\"hide\":\"Game_hide__3WuTu\",\"mainContainer\":\"Game_mainContainer__39pBT\",\"overlay\":\"Game_overlay__ot0vh\",\"showOverlay\":\"Game_showOverlay__2gmTQ\",\"gameContainer\":\"Game_gameContainer__2ypTx\",\"questionsAndAnswersContainer\":\"Game_questionsAndAnswersContainer__30LXL\",\"mobile\":\"Game_mobile__3jN9z\",\"notMobile\":\"Game_notMobile__1pX0e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDefaultStyles\":\"OptionsInQuestion_buttonDefaultStyles__1EHzP\",\"startButton\":\"OptionsInQuestion_startButton__PFO-J\",\"listContainer\":\"OptionsInQuestion_listContainer__32fhi\",\"option\":\"OptionsInQuestion_option__So-hE\",\"button\":\"OptionsInQuestion_button__3J5H0\",\"correct\":\"OptionsInQuestion_correct__63g-V\",\"incorrect\":\"OptionsInQuestion_incorrect__1vi_J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"GameWinnersAndTimer_hide__MRKfJ\",\"winnersContainers\":\"GameWinnersAndTimer_winnersContainers__1mVLm\",\"text\":\"GameWinnersAndTimer_text__2FalM\",\"tie\":\"GameWinnersAndTimer_tie__9R7Rr\",\"onlyWinner1\":\"GameWinnersAndTimer_onlyWinner1__dG0rP\",\"onlyWinner2\":\"GameWinnersAndTimer_onlyWinner2__pYWZR\",\"onlyWinner3\":\"GameWinnersAndTimer_onlyWinner3__MGvZu\",\"onlyWinner4\":\"GameWinnersAndTimer_onlyWinner4__3jOOV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SettingsModules_container__2OhlA\",\"settingsContainer\":\"SettingsModules_settingsContainer__3p_Th\",\"boxSetting\":\"SettingsModules_boxSetting__2zs0Y\",\"boxSettingElement\":\"SettingsModules_boxSettingElement__3gaek\",\"invalidField\":\"SettingsModules_invalidField__3vW-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDefaultStyles\":\"GameSettings_buttonDefaultStyles__2B86T\",\"startButton\":\"GameSettings_startButton__UC8PC\",\"button\":\"GameSettings_button__3fglz\",\"container\":\"GameSettings_container__2Di7a\",\"hide\":\"GameSettings_hide__2R0-Q\",\"titleContainer\":\"GameSettings_titleContainer__2NQcf\",\"title\":\"GameSettings_title__1mki3\",\"buttonsContainer\":\"GameSettings_buttonsContainer__2I0s3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDefaultStyles\":\"BelowAnswersContainer_buttonDefaultStyles__9PwDY\",\"startButton\":\"BelowAnswersContainer_startButton__X6jCx\",\"container\":\"BelowAnswersContainer_container__2OWMq\",\"startAgainContainer\":\"BelowAnswersContainer_startAgainContainer__2Qulb\",\"settingsContainer\":\"BelowAnswersContainer_settingsContainer__2colE\",\"iconBtn\":\"BelowAnswersContainer_iconBtn__2lkch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideNav\":\"MobileSideNavBar_sideNav__6O43z\",\"playerNameContainer\":\"MobileSideNavBar_playerNameContainer__krb_E\",\"playerName\":\"MobileSideNavBar_playerName__igD7B\",\"subtitle\":\"MobileSideNavBar_subtitle__GWKnb\",\"playerNameContainer1\":\"MobileSideNavBar_playerNameContainer1__2_aLy\",\"playerNameContainer2\":\"MobileSideNavBar_playerNameContainer2__qwFso\",\"playerNameContainer3\":\"MobileSideNavBar_playerNameContainer3__2eufS\",\"playerNameContainer4\":\"MobileSideNavBar_playerNameContainer4__2Alvv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"ErrorMessage_hide__2V_Gb\",\"container\":\"ErrorMessage_container__3EUGi\",\"error\":\"ErrorMessage_error__1PYV4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bubble\":\"QuestionText_bubble__uX81q\",\"bubbleBottomLeft\":\"QuestionText_bubbleBottomLeft__3TqvD\",\"text\":\"QuestionText_text__3J6Wj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerSeconds\":\"13\",\"hide\":\"Timer_hide__3VWTU\",\"timerContainer\":\"Timer_timerContainer__3qFnd\",\"twoNumbers\":\"Timer_twoNumbers__1MEXx\",\"oneNumber\":\"Timer_oneNumber__3cavc\",\"timer\":\"Timer_timer__36SEm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"AnswerStatus_hide__7IRHb\",\"status\":\"AnswerStatus_status__1IUTj\",\"correct\":\"AnswerStatus_correct__2nYbg\",\"incorrect\":\"AnswerStatus_incorrect__1Vwzk\",\"timeOver\":\"AnswerStatus_timeOver__28G3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDefaultStyles\":\"PlayersNavMobile_buttonDefaultStyles__2ng-E\",\"startButton\":\"PlayersNavMobile_startButton__1tm2P\",\"container\":\"PlayersNavMobile_container__TXI6-\",\"button\":\"PlayersNavMobile_button__2IJdM\",\"hide\":\"PlayersNavMobile_hide__1pVve\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerSeconds\":\"13\"};","module.exports = __webpack_public_path__ + \"static/media/trophy-solid.1ebbbd24.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-down-solid.df790f72.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-up-solid.b2498aea.svg\";","module.exports = __webpack_public_path__ + \"static/media/cog-solid.9f07a3df.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDefaultStyles\":\"GameSettingsModal_buttonDefaultStyles__2yMs8\",\"startButton\":\"GameSettingsModal_startButton__2TGaB\",\"alert\":\"GameSettingsModal_alert__3nsST\"};","import cssConstants from './css/_constants.scss';\n\nconst MILISECONDS_BETWEEN_QUESTIONS = 1000;\nconst NUMBER_OF_QUESTIONS_PER_PLAYER = 1;\nconst SECONDS_PER_QUESTION_WITH_TIMER = +cssConstants.timerSeconds;\n\nexport {\n    MILISECONDS_BETWEEN_QUESTIONS,\n    NUMBER_OF_QUESTIONS_PER_PLAYER,\n    SECONDS_PER_QUESTION_WITH_TIMER,\n};","import React from 'react';\nimport Switch from 'react-switch';\n\nexport default function SwitchComponent(settings) {\n    \n    return (\n        <Switch\n            onColor=\"#52d869\"\n            uncheckedIcon={false}\n            checkedIcon={false}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            {...settings}\n        />\n    )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Combobox,\n    ComboboxInput,\n    ComboboxPopover,\n    ComboboxList,\n    ComboboxOption,\n  } from \"@reach/combobox\";\n  import \"@reach/combobox/styles.css\";\n  import './css/ComboBox.scss'\n  \n\nexport default function ComboBox({ \n    options = [],\n    handleSelect, \n    inputId, \n    inputValue,\n    handleOnChange,\n }) {\n\n    const renderOptions = options.map((option, i) => {\n        return <ComboboxOption key={i} value={option} />\n    });\n\n    return(\n        <div>\n            <Combobox \n                onSelect={handleSelect}\n                openOnFocus\n            >\n            <ComboboxInput id={inputId} value={inputValue} onChange={handleOnChange}/>\n            <ComboboxPopover>\n                <ComboboxList persistSelection>\n                    {renderOptions}\n                </ComboboxList>\n            </ComboboxPopover>\n            </Combobox>\n        </div>\n    )\n}\n\nComboBox.propTypes = {\n    options: PropTypes.array,\n    handleComboBox: PropTypes.func,\n    handleOnChange: PropTypes.func,\n    inputValue: PropTypes.string,\n    inputId: PropTypes.string,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './css/ErrorMessage.module.scss';\n\nexport default function ErrorMessage({ text, id, show }) {\n\n    return (\n        <div className={styles.container}>\n            <label\n                className={`${styles.error} ${(show) ? '' : styles.hide}`}\n                id={`${id}-error`}\n            >\n                {text}\n            </label>\n        </div>\n    )\n}\n\nErrorMessage.propTypes = {\n    text: PropTypes.string,\n    id: PropTypes.string,\n    show: PropTypes.bool,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport default function Button({ onClick, text, children, className }) {\n    \n    return (\n    <button onClick={onClick} className={className}>\n        {children}\n        {text}\n    </button>\n    );\n}\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n    text: PropTypes.string,\n    className: PropTypes.string,\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './css/OptionsInQuestion.module.scss';\nimport { MILISECONDS_BETWEEN_QUESTIONS } from '../../constants.js';\nimport { Button } from '../Generic';\n\nexport default function OptionsInQuestion({ options, onClick, correctOption, isGameFinished }) {\n \n    const [btnClicked, setBtnClicked] = useState(false);\n    const [targetBtnText, setTargetBtn] = useState(null);\n\n    const listOfOptions = options.map((text, i) => {\n\n        const upperCaseText = text.toUpperCase()\n\n        const isTheCorrectOption = (correctOption === i);\n\n        const onButtonClick = (ev) => {\n\n            if (btnClicked || isGameFinished) return;\n\n            setBtnClicked(true);\n            setTargetBtn(ev.target.innerText);\n            onClick(isTheCorrectOption);\n            window.setTimeout(() => setBtnClicked(false), MILISECONDS_BETWEEN_QUESTIONS);\n        };\n\n        const btnClassName = (btnClicked && isTheCorrectOption) ? styles.correct :\n            (btnClicked && !isTheCorrectOption && targetBtnText === upperCaseText) ? styles.incorrect : ''; \n\n        return (\n            <li key={i} className={styles.option}>\n                <Button text={upperCaseText} className={`${styles.button} ${btnClassName}`} onClick={onButtonClick}/>\n            </li>\n        )   \n    })\n\n    return (\n        <ul className={styles.listContainer}>\n            {listOfOptions}\n        </ul>\n    )\n}\n\nOptionsInQuestion.propTypes = {\n    onClick: PropTypes.func,\n    options: PropTypes.array,\n    correctOption: PropTypes.number,\n    isGameFinished: PropTypes.bool,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './css/QuestionText.module.scss';\n\nexport default function QuestionText({ text }) {\n    return (\n        <div className={`${styles.bubble} ${styles.bubbleBottomLeft}`}>\n            <h2 className={styles.text}>{text}</h2>\n        </div>\n    )\n}\n\nQuestionText.propTypes = {\n    text: PropTypes.string,\n}","import React, { useState , useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './css/Timer.module.scss';\n\nfunction StartTimer({ initialValue, handler }) {\n\n    const [time, setTimer] = useState(initialValue);\n    const [isTimerInZero, setTimerInZero] = useState(false);\n\n    useEffect(() => {\n        const timerId = setInterval(() => {\n            setTimer(time => {\n                const nextSecond = time - 1;\n\n                if (nextSecond === 0){\n                    clearInterval(timerId);\n                    setTimerInZero(true);\n                }\n\n                return nextSecond;\n            });\n        }, 1000);\n        return () => clearInterval(timerId);\n      }, [handler]);\n\n    useEffect(() => {\n\n        if (isTimerInZero) {\n            setTimerInZero(false);\n            return handler()\n        }\n\n    }, [isTimerInZero, handler])\n\n    const numberLength = time.toString().length;\n\n    return (\n        <div className={styles.timerContainer}>\n            <span className={(numberLength === 1) ? styles.oneNumber : styles.twoNumbers} role='timer'>{time}</span>\n            <svg>\n                <circle r=\"18\" cx=\"20\" cy=\"20\"></circle>\n            </svg>\n        </div>\n    );\n}\n\nexport default function Timer({ initialValue, startTimer, handlerForTimeOver }) {\n    \n    return startTimer && <StartTimer initialValue={initialValue} handler={handlerForTimeOver}/>;\n\n}\n\nTimer.propTypes = {\n    initialValue: PropTypes.number,\n    startTimer: PropTypes.bool,\n    handlerForTimeOver: PropTypes.func,\n}","import React from 'react';\nimport Timer from './Timer.js'\nimport PropTypes from 'prop-types';\nimport styles from './css/GameWinnersAndTimer.module.scss';\nimport TrophySVG from '../../static/Icons/trophy-solid.svg';\n\nexport default function GameWinnersAndTimer({ timerSettings, gameWinners }) {\n\n    const { typeOfEndOfGame, winners} = gameWinners || {};\n\n    const winningText = getWinningText(gameWinners);\n    const typeOfWinnerStyle = (typeOfEndOfGame === 'Win') ? `${styles[`onlyWinner${winners[0].id + 1}`]}` : styles.tie;\n\n    return (\n        <React.Fragment>\n            <Timer {...timerSettings}/>\n            <div className={(gameWinners) ? '' : styles.hide}>\n                <div className={`${styles.winnersContainers} ${typeOfWinnerStyle}`}>\n                    <figure>\n                        <img src={TrophySVG} alt='Trophy Logo' height='40' width='40' />\n                    </figure>\n                    <h2 className={styles.text}>{winningText}</h2>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nGameWinnersAndTimer.propTypes = {\n    timerSettings: PropTypes.object,\n    gameWinners: PropTypes.shape({\n        typeOfEndOfGame: PropTypes.string,\n        winners: PropTypes.array,\n    }),\n};\n\nfunction getWinningText(gameWinners) {\n\n    if (!gameWinners) return '';\n\n    const { typeOfEndOfGame, winners } = gameWinners;\n    let winningText;\n\n    if (typeOfEndOfGame === 'Win') {\n\n        winningText = `The Winner is ${winners[0].name}`;\n\n    } else {\n\n        const winnersClone = winners.slice();\n\n        const lastWinner = winnersClone.pop().name;\n        const players = winnersClone.map((player) => player.name).join(', ');\n\n        winningText = `There was a tie between ${players} and ${lastWinner}`;\n    }\n\n    return winningText;\n}","export function getRandomInt(max) {\n    const random = Math.random();\n\n    return (random === 1) ? max : Math.floor(random * (max+1));\n}\n\nexport const noop = () => {};\n\nexport const pascalCaseToCamelCase = (str) => {\n\n    const firstLetterLowercase = str[0].toLowerCase();\n    const splitWords = str.split(' ').join('').split('');\n    splitWords.splice(0, 1, firstLetterLowercase);\n\n    const camelCaseWord = splitWords.join('');\n\n    return camelCaseWord\n}\n\nexport function isDuplicate(arr, elem) {\n\n    const checkArr = arr.slice();\n\n    if (checkArr.indexOf(elem) === -1) return false;\n\n    checkArr.splice(checkArr.indexOf(elem), 1);\n    return (checkArr.indexOf(elem) !== -1);\n\n}\n\nexport const callMethodsFromArray = (methods, ...params) => methods.map(fn =>  fn(...params));\n\nexport const getIdOfHigherNumberOfArray = (arr) => {\n\n    const higherNumber = Math.max(...arr);\n    \n    if (isDuplicate(arr, higherNumber)) {\n        const arrOfIds = [];\n        const arrClone = arr.slice();\n\n        while (arrClone.indexOf(higherNumber) !== -1) {\n            const id = arrClone.indexOf(higherNumber);\n            arrOfIds.push(id);\n\n            arrClone.splice(arrClone.indexOf(higherNumber), 1, 'Element taken out');\n        }\n\n        return arrOfIds;\n    }\n\n    return [arr.indexOf(higherNumber)];\n}\n\nexport function deleteDuplicates(array) {\n    const result = [];\n    \n    array.forEach((elem) => {\n        \n        if (result.indexOf(elem) === -1) {\n            result.push(elem);\n        }\n\n    });\n\n\treturn result;\n}\n\nexport function convertArrOfObjToOneObj(arr) {\n    const cloneArr = arr.slice();\n\n    return cloneArr.reduce((acum, elem) => Object.assign(acum, elem));\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { pascalCaseToCamelCase } from '../../functions/general-functions.js';\nimport styles from './css/AnswerStatus.module.scss';\n\nexport default function AnswerStatus({ status, visibility }) {\n\n    const answerStatusToCamelCase = pascalCaseToCamelCase(status);\n    const answerStatusClassName = `${styles.status}  ${styles[answerStatusToCamelCase]}\n        ${(visibility) ? '' : styles.hide}`;\n\n    return (\n        <p className={answerStatusClassName} >{status}</p>\n    );\n}\n\nAnswerStatus.propTypes = {\n    status: PropTypes.string,\n    visibility: PropTypes.bool,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, ComboBox } from '../Generic';\nimport styles from './css/SettingsModules.module.scss';\nimport { ErrorMessage } from '../Generic';\n\nfunction SettingsModule({ id, title, invalid, errorMessage, children }) {\n    return (\n        <React.Fragment>\n            <hr/>\n            <div className={styles.boxSetting}>\n                <h4 id={id}>{title}</h4>\n                <div className={styles.boxSettingElement}>\n                    <div className={`${(invalid) ? styles.invalidField : ''}`} aria-invalid={invalid}>\n                        {children}\n                    </div>\n                </div>\n            </div>\n            <ErrorMessage {...errorMessage}/>\n        </React.Fragment>\n    )\n}\n\nexport default function SettingsModules({ children, fields }) {\n\n    const getSettingsModules = () => {\n\n        const getModulePropsFromField = (field) => {\n\n            const getId = (id) => `${id}Title`;\n    \n            return {\n                fieldId: field.id,\n                moduleId: getId(field.id),\n                invalid: !field.status.value,\n                errorMessage: {\n                    show: !field.status.value,\n                    ...field.errorMessage,\n                },\n            }\n        };\n\n        const furtherSettings = (field, prevSettings) =>  {\n\n            const modulesChildrenAndTitle = {\n                numberOfPlayers: {\n                    title: 'Number of Players',\n                    children: <input \n                        type='number'\n                        id={prevSettings.fieldId} \n                        value={field.value} \n                        onChange={field.handler} \n                        aria-labelledby={prevSettings.moduleId}\n                    />,\n                },\n                playWithTimer: {\n                    title: 'Play with Timer',\n                    children: <Switch\n                        id={prevSettings.fieldId} \n                        checked={field.value}\n                        onChange={field.handler}\n                        aria-labelledby={prevSettings.moduleId}\n                    />\n                },\n                difficulty: {\n                    title: 'Difficulty',\n                    children: <ComboBox\n                        inputId={prevSettings.fieldId}\n                        options={field.possibleDifficulties} \n                        handleSelect={field.handler.handleSelect}\n                        inputValue={field.value}\n                        handleOnChange={field.handler.handleOnChange}\n                        aria-labelledby={prevSettings.moduleId}    \n                    />,\n                },\n            };\n\n            const moduleFurtherSettings = modulesChildrenAndTitle[field.id];\n            \n            return {\n                ...prevSettings,\n                ...moduleFurtherSettings,\n            }\n        }\n\n        const settingModules = fields.map((field, i) => {\n            const moduleProps =  getModulePropsFromField(field)\n            const addFurtherProps = furtherSettings(field, moduleProps);\n\n            return <SettingsModule key={i} {...addFurtherProps}/>\n        });\n\n        return settingModules;\n    }\n\n    const settingModules = getSettingsModules();\n\n\n    return (\n    <div className={styles.container}>\n        <div className={styles.settingsContainer}>\n            {settingModules}\n            <hr/>\n        </div>\n        {children}\n    </div>\n    )\n}\n\nSettingsModules.propTypes = {\n    fields: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            status: PropTypes.shape({\n                id: PropTypes.string,\n                value: PropTypes.bool,\n                typeOfError: PropTypes.string,\n            }),\n            value: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.number,\n                PropTypes.bool,\n            ]),\n            handler: PropTypes.oneOfType([\n                PropTypes.func,\n                PropTypes.object,\n            ]),\n            errorMessage: PropTypes.shape({\n                id: PropTypes.string,\n                text: PropTypes.string,\n            }),\n        }),\n    )\n}","function getValidationArgs(fields) {\n\n    const difficultyValidationFn = (value, possibleDifficulties) => {\n\n        if (!value) return false;\n    \n        return possibleDifficulties.includes(value);\n    };\n    \n    const validationArgs = fields.map((field) => {\n    \n        const validationFn = {\n            numberOfPlayers: (value) => (value <= 4) && (value > 1),\n            playWithTimer: () => true,\n            difficulty: (value) => difficultyValidationFn(value, field.possibleDifficulties),\n        }\n    \n        return {\n            id: field.id,\n            value: field.value,\n            validationFn: validationFn[field.id],\n        }\n    });\n\n    return validationArgs;\n}\n\nexport function formValidation(fields) {\n\n    const args = getValidationArgs(fields)\n    \n    const isValid = (value, validationFn) => validationFn(value);\n\n    let isValidForm = args.map((arg) => isValid(arg.value, arg.validationFn));\n    isValidForm = !isValidForm.includes(false);\n\n    const addStatusToArgs = args.map((field) => {\n       return {\n           id: field.id,\n           value: field.validationFn(field.value),\n           typeOfError: null,\n       }\n    });\n\n    return {\n        formStatus: isValidForm,\n        fields: addStatusToArgs,\n    };\n}\n\nexport const createFieldIds = (fieldsObj) => {\n    const fieldsClone = Object.assign({}, fieldsObj);\n    const fieldNames = Object.keys(fieldsClone);\n    \n    fieldNames.forEach((name) => {\n        fieldsClone[name].id = name;\n    });\n\n    return fieldsClone;\n}\n\n\nexport const createInitialSettingsStatus = (fields) => {\n    \n\n    const fieldIds = fields.map(({ id }) => id);\n\n    const arrOfStatus = fieldIds.map((name) => {\n        return {\n            id: name,\n            value: true,\n            typeOfError: null,\n        }\n    });\n\n    return arrOfStatus;\n}\n\nexport const injectFieldStatus = (fields, fieldStatusArr) => {    \n    const fieldsClone = fields.slice();\n\n    fieldsClone.forEach((field) => {\n        const fieldStatus = fieldStatusArr.find((fieldStatus) => fieldStatus.id === field.id);\n\n        field.status = fieldStatus;\n    });\n\n    return fieldsClone;\n}\n\nexport const setErrorMessage = (fields, messages) => {\n    const fieldsClone = fields.slice();\n\n    fieldsClone.forEach((field) => {\n\n        const message = messages.find((message) => message.id === field.id);\n    \n        field.errorMessage = message;\n    });\n\n    return fieldsClone;\n}\n\nexport const setNewValuesFromInputs = (fields, settingsFieldsInfo) => {\n\n    const returnObj = {};\n\n    return new Promise((resolve) => {\n\n        for (const field of fields) {\n\n            const valuesIds = settingsFieldsInfo.map(({ id }) => id);\n            \n            if (valuesIds.includes(field.id)) {\n    \n                const settingField = settingsFieldsInfo.find(settingField => settingField.id === field.id);\n    \n                let value = settingField.value;\n                const returnedValue = field.handler(value);\n    \n                returnObj[field.id] = returnedValue;\n    \n            }\n        }\n\n        resolve(returnObj);\n    })\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SettingsModules } from '../Game';\nimport { useFieldStatus, useInputState, useSwitchState, useComboBoxState } from '../../Hooks/app-hooks.js';\nimport styles from './css/GameSettings.module.scss';\nimport { \n    injectFieldStatus, \n    createInitialSettingsStatus,\n    setErrorMessage,\n    formValidation,\n    setNewValuesFromInputs,\n } from '../../functions/settings-form-functions.js';\nimport { noop } from '../../functions/general-functions.js';\nimport { Button } from '../Generic/';\nimport isEqual from 'lodash.isequal';\n\nexport default function GameSettings ({ \n    fields: initialPropsFields,\n    isGameStarted,\n    successButtonHandler,\n    cancelButton,\n    title,\n    titleClassname,\n    stopKeyEventPropagation, \n    containerId\n    }) {\n\n    const initialObjectState = createInitialSettingsStatus(initialPropsFields);\n    const { fieldStatus, setFieldStatus } = useFieldStatus(initialObjectState);\n    const fields = injectFieldStatus(initialPropsFields, fieldStatus);\n\n    const [ numberOfPlayersValue, playWithTimerValue, difficultyValue ] = initialPropsFields.map(({ value }) => value);\n\n    const { inputValue, handleChange } = useInputState(numberOfPlayersValue);\n    const { switchState, handleSwitch } = useSwitchState(playWithTimerValue);\n    const { comboBoxValue, handlers: comboBoxHandlers } = useComboBoxState(difficultyValue);\n\n    const settingsFieldsInfo = [\n        {\n            id: 'numberOfPlayers',\n            value: inputValue,\n            handler: handleChange,\n        },\n        {\n            id: 'playWithTimer',\n            value: switchState,\n            handler: handleSwitch,\n        },\n        {\n            id: 'difficulty',\n            value: comboBoxValue,\n            handler: comboBoxHandlers,\n        },\n    ];\n\n    let settingFields = fields.map((field) => {\n\n        const settingField = settingsFieldsInfo.find(settingField => settingField.id === field.id);\n    \n        const { value, handler } = settingField;\n\n        return {\n            ...field,\n            handler,\n            value,\n        };\n    });\n\n    const errorMessages = settingFields.map((field) => {\n        const messages = {\n            numberOfPlayers: 'Players between 2 and 4',\n            difficulty: 'You must choose a valid difficulty',\n        }\n\n        return {\n            id: field.id,\n            text: messages[field.id],\n        }\n    });\n\n    settingFields = setErrorMessage(settingFields, errorMessages);\n\n    const fieldsValue = fields.map((field) => ({ [field.id]: field.value }));\n    const settingFieldsValue = settingFields.map((field) => ({ [field.id]: field.value }));\n\n    const didSettingFieldsChange = !isEqual(fieldsValue, settingFieldsValue);\n\n    const onSuccessClick = () => {\n\n        const validation = formValidation(settingFields);\n        setFieldStatus(validation.fields);\n\n        if (!validation.formStatus) return;\n\n        if (!didSettingFieldsChange) {\n            \n            return successButtonHandler();\n        };\n\n        const fieldsState = setNewValuesFromInputs(fields, settingsFieldsInfo);\n        fieldsState.then((newState) => {\n\n            if (successButtonHandler) successButtonHandler(newState);\n\n        });\n    }\n\n    const handleKeyPress = (ev) => {\n\n        if (stopKeyEventPropagation) ev.nativeEvent.stopImmediatePropagation();\n    \n        switch (ev.key) {\n          case 'Enter':\n            return onSuccessClick();\n          default:\n            noop();\n        };\n    \n    };\n\n    return (\n        <div id={containerId} className={styles.container} onKeyDown={handleKeyPress}>\n            { title && <div className={styles.titleContainer}>\n                <h1 className={(titleClassname) ? titleClassname : styles.title}>{title}</h1>\n            </div>}\n            <SettingsModules fields={settingFields}>\n            <div className={styles.buttonsContainer}>\n                { cancelButton }\n                <Button \n                    text={(!isGameStarted) ? 'Start' : (didSettingFieldsChange) ? 'Start Again' : 'Continue'}\n                    className={styles.button}\n                    onClick={onSuccessClick} \n                />\n            </div>\n            </SettingsModules>\n        </div>\n    )\n}\n\nGameSettings.propTypes = {\n    containerId: PropTypes.string,\n    fields: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            value: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.number,\n                PropTypes.bool,\n            ]),\n            handler: PropTypes.func,\n        }),\n    ),\n    isGameStarted: PropTypes.bool,\n    title: PropTypes.string,\n    titleClassname: PropTypes.string,\n    successButtonHandler: PropTypes.func,\n    cancelButton: PropTypes.element,\n    stopKeyEventPropagation: PropTypes.bool,    \n};\n\n","import { useState } from 'react';\n\nexport function useInputState(initialValue) {\n\n    const [inputValue, setInputValue] = useState(initialValue);\n  \n    const handleChange = (ev) => {\n      const value = (ev.target.value === '') ? '' : +ev.target.value;\n      \n      setInputValue(value);\n    }\n    \n    return {\n        inputValue,\n        handleChange,\n    }\n  }\n  \nexport function useSwitchState(initialValue) {\n  const [switchState, setSwitchState] = useState(initialValue);\n\n  const handleSwitch = (checked) => setSwitchState(checked);\n\n  return {\n    switchState,\n    handleSwitch,\n  }\n}\n\nexport function useComboBoxState(initialValue) {\n\n    const [comboBoxValue, setValue] = useState(initialValue);\n\n    const handleOnChange = (ev) =>setValue(ev.target.value);\n\n    const handleSelect = (item) => {\n      setValue(item);\n  }\n\n  return {\n      comboBoxValue,\n      handlers: {\n        handleSelect,\n        handleOnChange,\n    }\n  }     \n}\n\nexport function useFieldStatus(initialObj) {\n  \n  const [ fieldStatus, setStatus ] = useState(initialObj);\n\n  function setFieldStatus(validationFields) {\n\n    return setStatus(validationFields);\n  }\n\n  return {\n    fieldStatus,\n    setFieldStatus,\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './css/PlayersNav.module.scss';\n\nexport default function PlayersNav({ players }) {\n\n    const nav = players.map((player, i) => {\n\n        return (\n            <li key={i} className={styles.navItem}>\n                <div className={`${styles[`nameContainer${i + 1}`]} ${styles.nameContainer}`}>\n                    <p className={styles.name}>{player.name}</p>\n                    <p className={(player.turn) ? styles.yourTurn : styles.hide}>It's your turn</p>\n                </div>\n                <div className={styles.tooltip}>Correct: {player.correct}</div>\n            </li>\n        )\n    })\n\n    return (\n        <ul className={styles.listContainer}>\n            {nav}\n        </ul>\n    )\n}\n\nPlayersNav.propTypes = {\n    players: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number,\n            name: PropTypes.name,\n            correct: PropTypes.number,\n            turn: PropTypes.bool,\n            winner: PropTypes.bool,\n        }),\n    ),\n}","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { PlayersNav } from '../Game';\nimport { Button } from '../Generic';\nimport chevronDown from '../../static/Icons/chevron-down-solid.svg';\nimport chevronUp from '../../static/Icons/chevron-up-solid.svg';\nimport styles from './css/PlayersNavMobile.module.scss';\n\nexport default function PlayersNavMobile ({ players }) {\n\n    const [showPlayersNav, setShowPlayersNav] = useState(false);\n\n    return (\n        <div className={styles.container}>\n            <div className={(showPlayersNav) ? '' : styles.hide}>\n                <PlayersNav players={players}/>\n            </div>\n            <Button \n                text={(showPlayersNav) ? 'Hide Stats' : 'Show Stats'} \n                className={styles.button} \n                onClick={() => setShowPlayersNav(!showPlayersNav)}\n            >\n                { !showPlayersNav && \n                    <figure>\n                        <img src={chevronDown} alt='Stats Opening' height='12' width='12' />\n                    </figure>\n                }\n                { showPlayersNav &&\n                    <figure>\n                        <img src={chevronUp} alt='Stats Closing' height='12' width='12' />\n                    </figure>   \n                }\n            </Button>\n        </div>\n    );\n}\n\nPlayersNavMobile.propTypes = {\n    players: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number,\n            name: PropTypes.name,\n            correct: PropTypes.number,\n            turn: PropTypes.bool,\n            winner: PropTypes.bool,\n        }),\n    ),\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SettingsSVG from '../../static/Icons/cog-solid.svg';\nimport { Button } from '../Generic';\nimport styles from './css/BelowAnswersContainer.module.scss';\n\nexport default function BelowAnswersContainer({ handleModal, isGameStarted, restartGame }) {\n    return (\n        <div className={styles.container}>\n            <div className={styles.startAgainContainer}>\n                {!isGameStarted && <Button className={styles.startButton} onClick={() => restartGame()} text='Start Again' />}\n            </div>\n            <div className={styles.settingsContainer}>\n                <button className={styles.iconBtn} onClick={handleModal}>\n                    <figure>\n                        <img src={SettingsSVG} alt='Settings Logo - Modal Opening' height='20' width='20' />\n                    </figure>\n                </button>\n            </div>\n        </div>\n    );\n}\n\nBelowAnswersContainer.propTypes = {\n    handleModal: PropTypes.func,\n    isGameStarted: PropTypes.bool,\n    restartGame: PropTypes.func,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './css/MobileSideNavBar.module.scss';\n\nexport default function MobileSideNavBar({ playerTurn }) {\n    const { name, id } = playerTurn\n\n    return (\n        <div className={styles.sideNav}>\n            <div className={`${styles.playerNameContainer} ${styles[`playerNameContainer${id + 1}`]}`}>\n                <h3 className={styles.playerName}>{name}</h3>\n                <h4 className={styles.subtitle}>should play</h4>\n            </div>\n        </div>\n    )\n}\n\nMobileSideNavBar.propTypes = {\n    playerTurn: PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n    }),\n}","let listOfQuestionsWithoutId = [\n  {\n    question: '¿En cual de estos equipos no jugó Nuno Gomes? ',\n    answers: [\n      'Porto',\n      'Blackburn Rovers',\n      'Fiorentina'\n    ],\n    correct: 0,\n    difficulty: 'High',\n    creator: 103,\n  },\n  {\n    question: '¿Quién ganó el Balón de Oro otorgado por la FIFA en 1992? ',\n    answers: [\n      'Mathias Sammer',\n      'Marco Van Basten',\n      'Lothar Matthaus',\n      'Ruud Gullit',\n    ],\n    correct: 1,\n    difficulty: 'Medium',\n    creator: 103,\n  },\n  {\n    question: '¿Cuál de estos apodos representa al Club Atlético Platense? ',\n    answers: [\n      'El Bicho',\n      'El Bohemio',\n      'El Calamar'\n    ],\n    correct: 2,\n    difficulty: 'Low',\n    creator: 103,\n  },\n  {\n    question: 'Durante 12 años, Emilio Butragueño jugó para el mismo club en España. ¿Cuál era? ',\n    answers: [\n      'Atlético Madrid',\n      'Real Madrid',\n      'Barcelona'\n    ],\n    correct: 1,\n    difficulty: 'Medium',\n    creator: 103,\n  },\n  {\n    question: 'De estos equipos, ¿en cual fue el primero que jugó Zlatan Ibrahimovic ? ',\n    answers: [\n      'Juventus',\n      'Inter',\n      'Milán'\n    ],\n    correct: 0,\n    difficulty: 'Low',\n    creator: 103,\n  },\n  {\n    question: 'Uno de estos jugadores, nunca ganó la Champions League. ¿Quién es? ',\n    answers: [\n      'Ronaldo Nazario Lima',\n      'Rui Costa',\n      'David Beckham',\n      'Fernando Hierro',\n      'John Terry',\n    ],\n    correct: 0,\n    difficulty: 'Medium',\n    creator: 103,\n  },\n  {\n    question: 'En el Mundial de Corea-Japón 2002, Arabia Saudita fue derrotado 8-0 en su debut. ¿Quién fue el verdugo? ',\n    answers: [\n      'Brasil',\n      'España',\n      'Alemania',\n      'Francia',\n    ],\n    correct: 2,\n    difficulty: 'Medium',\n    creator: 103,\n  },\n  {\n    question: 'En Irlanda, desde 1922 que el fútbol es profesional. ¿Quién es el que mayor cantidad de veces fue campeón de la Liga? ',\n    answers: [\n      'Shelbourne',\n      'Shamrock Rovers',\n      'St Patrick\\'s Athletic',\n    ],\n    correct: 1,\n    difficulty: 'High',\n    creator: 103,\n  },\n  {\n    question: '¿Quién ganó el mundial de fútbol de 1954? ',\n    answers: [\n      'Brasil',\n      'Alemania',\n      'Italia'\n    ],\n    correct: 1,\n    difficulty: 'Low',\n    creator: 103,\n  },\n  {\n    question: '¿Quién fue subcampeón de Inglaterra en el Mundial 1966? ',\n    answers: [\n      'Alemania',\n      'Portugal',\n      'Unión Soviética',\n    ],\n    correct: 0,\n    difficulty: 'Medium',\n    creator: 103,\n  },\n  {\n    question: 'En la final de la Champions League del 2005, ¿quiénes metieron los goles del Liverpool? ',\n    answers: [\n      'Baros - Kewell - Carragher',\n      'Gerrard - Kewell - Finnan',\n      'Gerrard - Smicer - Xabi Alonso',\n      'Luis García - Cissé - Carragher'\n    ],\n    correct: 2,\n    difficulty: 'High',\n    creator: 103,\n  },\n  {\n    question: '¿Quién era el Entrenador del Velez Campeón de 1998? ',\n    answers: [\n      'Carlos Bianchi',\n      'Marcelo Bielsa',\n      'Alfio Basile',\n      'Hugo Tocalli',\n      'Héctor Veira',\n    ],\n    correct: 1,\n    difficulty: 'High',\n    creator: 103,\n  },\n  {\n    question: '¿Cual es la temporada en que los Gunners de Arsene Wenger se coronan campeones sin perder un partido? ',\n    answers: [\n      '2000-2001',\n      '2003-2004',\n      '2007-2008'\n    ],\n    correct: 1,\n    difficulty: 'Low',\n    creator: 103,\n  },\n  {\n    question: 'En el año 2006, Holanda y Portugal se enfrentan en los Octavos de Final del Mundial de Alemania. ¿Quién salió victorioso? ',\n    answers: [\n      'Holanda',\n      'Portugal',\n      'Perdieron los dos'\n    ],\n    correct: 1,\n    difficulty: 'Low',\n    creator: 103,\n  },\n  {\n    question: '¿Quién es el máximo goleador histórico de la Selección Argentina de Fútbol ? ',\n    answers: [\n      'Diego Armando Maradona',\n      'Gabriel Omar Batistuta',\n      'Lionel Andrés Messi',\n    ],\n    correct: 2,\n    difficulty: 'Low',\n    creator: 103,\n  },\n  {\n    question: '¿Quién fue el campeón del Torneo Nacional de 1984 en Argentina? ',\n    answers: [\n      'Ferro Carril Oeste',\n      'Argentinos Juniors',\n      'Independiente',\n      'Estudiantes de La Plata',\n      'River Plate',\n    ],\n    correct: 0,\n    difficulty: 'High',\n    creator: 103,\n  },\n  {\n    question: '¿Quién ganó el Balón de Oro a Mejor Jugador en el mundial del 2002? ',\n    answers: [\n      'Ronaldo Nazario Lima',\n      'Oliver Kahn',\n      'Rivaldo',\n    ],\n    correct: 1,\n    difficulty: 'Medium',\n    creator: 103,\n  },\n  {\n    question: '¿Quién fue el campeón de la Liga MX en México? ',\n    answers: [\n      'América',\n      'Pachuca',\n      'Chivas de Guadalajara',\n      'Monterrey',\n      'Toluca',\n    ],\n    correct: 3,\n    difficulty: 'High',\n    creator: 103,\n  },\n  {\n    question: '¿En cuál de estos equipos no jugó Carlos \"El Apache\" Tevez? ',\n    answers: [\n      'Manchester United',\n      'West Ham',\n      'Flamengo',\n    ],\n    correct: 2,\n    difficulty: 'Low',\n    creator: 103,\n  },\n  {\n    question: '¿Cuál de estos equipos ingleses no pertenece a la ciudad de Londres? ',\n    answers: [\n      'West Ham',\n      'Crystal Palace',\n      'Tottenham',\n      'Aston Villa',\n      'Arsenal',\n    ],\n    correct: 3,\n    difficulty: 'Medium',\n    creator: 105,\n  },\n  {\n    question: '¿Cuantos goles metió el Polaco-Alemán Miroslav Klose en todos los mundiales? ',\n    answers: [\n      '14',\n      '15',\n      '16',\n      '17',\n    ],\n    correct: 2,\n    difficulty: 'Low',\n    creator: 105,\n  },\n  {\n    question: '¿En cuál de estos equipos no jugó Gerard Piqué? ',\n    answers: [\n      'Manchester United',\n      'Barcelona B',\n      'Zaragoza',\n    ],\n    correct: 1,\n    difficulty: 'Medium',\n    creator: 105,\n  },\n  {\n    question: '¿Qué equipo ganó la Champions League en el año 2002? ',\n    answers: [\n      'Inter',\n      'Juventus',\n      'Real Madrid',\n      'Bayern Munich',\n    ],\n    correct: 2,\n    difficulty: 'Medium',\n    creator: 105,\n  },\n  {\n    question: '¿Qué tienen en común estos jugadores: Pierre Aubameyang, Thierry Henry, Sebastien Squillaci, David Trezeguet y Emmanuel Petit ? ',\n    answers: [\n      'Todos Representaron a la Selección Francesa',\n      'Todos jugaron en el Arsenal',\n      'Todos son Delanteros',\n      'Todos Jugaron en el Monaco',\n      'Todos jugaron en la Juventus',\n    ],\n    correct: 3,\n    difficulty: 'High',\n    creator: 105,\n  },\n  {\n    question: '¿Jugaron juntos en el Sporting Lisboa, Cristiano Ronaldo y Nani? ',\n    answers: [\n      'Sí',\n      'No',\n    ],\n    correct: 1,\n    difficulty: 'Low',\n    creator: 105,\n  },\n  {\n    question: '¿En qué año nació Antoine Griezmann? ',\n    answers: [\n      '1985',\n      '1989',\n      '1991',\n    ],\n    correct: 2,\n    difficulty: 'Low',\n    creator: 105,\n  },\n  {\n    question: '¿Quién fue el tercer puesto en la entrega del Balón de Oro de la FIFA en el 2008? ',\n    answers: [\n      'Xavi',\n      'Fernando Torres',\n      'Kaká',\n    ],\n    correct: 1,\n    difficulty: 'Medium',\n    creator: 105,\n  },\n  {\n    question: '¿Cuál de estas ligas no pertenece al Quinteto de competiciones más atractivas según la UEFA? ',\n    answers: [\n      'Ligue 1',\n      'Serie A',\n      'Liga Portuguesa',\n    ],\n    correct: 2,\n    difficulty: 'Low',\n    creator: 105,\n  },\n];\n\nconst listOfQuestions = listOfQuestionsWithoutId.map((question, i) => {\n    const newValue = {id: i};\n    const questionObject = Object.assign(question, newValue);\n    \n    return questionObject;\n});\n\n\nexport { listOfQuestions };\n\n\n","import { \n      getRandomInt,\n      deleteDuplicates, \n      getIdOfHigherNumberOfArray, \n} from './general-functions.js';\nimport { listOfQuestions } from '../Questions/questions.js';\nimport { MILISECONDS_BETWEEN_QUESTIONS, NUMBER_OF_QUESTIONS_PER_PLAYER } from '../constants.js';\n\nexport function createPlayers(playersNames, counterOfCorrectAnswers, playerTurn, gameWinners) {\n\n      const players = playersNames.map((player, i) => {\n  \n        let winner = -1;\n        \n        if (gameWinners) {\n  \n          const arrOfIdWinners = gameWinners.winners.map((winner) => winner.id);\n          winner = arrOfIdWinners.indexOf(player.id);\n        }\n    \n        return {\n          id: player.id,\n          name: player.name,\n          correct: (counterOfCorrectAnswers.counter[i]) ? counterOfCorrectAnswers.counter[i].correct: 0,\n          turn: (playerTurn.id === i),\n          winner: (winner === -1) ? false : true,\n        };\n    \n      });\n    \n      return players;\n    \n}\n\nexport function chooseNextIdQuestion(usedIds = [], difficulty) {\n      let nextId;\n\n      const arrayOfIds = getQuestionsIdsByDifficulties(difficulty);\n\n      do {\n\n            const randomNumber = getRandomInt(arrayOfIds.length - 1);\n            nextId = arrayOfIds[randomNumber];\n\n      } while (usedIds.includes(nextId));\n      \n      return nextId;\n\n}\n\nexport function handleNextQuestion(\n      numOfPlayers,\n      setUsedIds,\n      afterPlayerAnswered,\n      whenGameisFinished,\n      setNextQuestion,\n      isCorrect = null\n) {\n\n      afterPlayerAnswered(isCorrect);\n\n      const getUsedIdsLength = new Promise((resolve) => {\n            const getUsedIds = setUsedIds();\n\n            resolve(getUsedIds.length);\n      });\n      \n      getUsedIdsLength.then((getUsedIdsLength) => {\n\n            if (isGameFinished(NUMBER_OF_QUESTIONS_PER_PLAYER, numOfPlayers, getUsedIdsLength)) {\n\n                  return window.setTimeout(() => {\n\n                        whenGameisFinished();\n                  }, MILISECONDS_BETWEEN_QUESTIONS); \n\n            }\n\n            window.setTimeout(() => {\n\n                  setNextQuestion();\n            }, MILISECONDS_BETWEEN_QUESTIONS);\n            \n      });\n\n\n}\n\nexport function isGameFinished(numOfQuestionsPerPlayer, numOfPlayers, numOfDoneQuestions) {\n      \n      return (numOfQuestionsPerPlayer * numOfPlayers === numOfDoneQuestions);\n}\n\nexport function getWinners(counterOfCorrectAnswers) {\n\n      const correctAnswers = counterOfCorrectAnswers.map((player) => player.correct);\n      const arrOfIds = getIdOfHigherNumberOfArray(correctAnswers);\n\n      const typeOfEndOfGame = (arrOfIds.length === 1) ? 'Win': 'Tie';\n\n      const arrOfWinners = arrOfIds.map((id) => {\n            return counterOfCorrectAnswers[id];\n      });\n      \n      return {\n            typeOfEndOfGame,\n            winners: arrOfWinners,\n      }\n}\n\nexport function getQuestionsIdsByDifficulties(difficulty) {\n\n      return listOfQuestions.filter((question) => question.difficulty === difficulty)\n      .map((question) => question.id);\n\n}\n\nexport function getDifficulties() {\n\n      const allQuestionDifficulties = listOfQuestions.map((question) => {\n            return question.difficulty;\n      });\n\n      const arrayOfDifficultes = deleteDuplicates(allQuestionDifficulties);\n      arrayOfDifficultes.sort();\n\n      return arrayOfDifficultes;\n      \n}","import { useState } from 'react';\nimport { chooseNextIdQuestion, getWinners } from '../functions/question-functions.js';\n\nexport function useCounterOfCorrectAnswers(playersNames) {\n\n    function initializeCounter(playersNames) {\n\n      const playersStatusInGame = [];\n\n      for (let i = 0; i < playersNames.length; i++) {\n\n        const playerStatus = {\n          id: playersNames[i].id,\n          name: playersNames[i].name,\n          correct: 0,\n        };\n\n        playersStatusInGame.push(playerStatus);\n      }\n\n      return playersStatusInGame;\n    }\n\n    const playersStatusInGame = initializeCounter(playersNames);\n\n    const [counter, setCounter] = useState(playersStatusInGame);\n\n    function updateCounter(playerId, statusOfAnswer) {\n\n        if (!statusOfAnswer) return;\n          const counterClone = counter.slice();\n\n          counterClone[playerId].correct++;\n          setCounter(counterClone);\n\n        return;\n    }\n\n    function resetCounter(playersNames) {\n\n      const playersStatusInGame = initializeCounter(playersNames);\n\n      setCounter(playersStatusInGame);\n\n    }\n\n    return {\n        counter,\n        updateCounter,\n        resetCounter,\n    }\n}\n\nexport function useAnswerStatus() {\n\n    const [answerStatus, setStatus] = useState('No Status');\n  \n    function setAnswerStatus(isCorrect) {\n      \n      switch (isCorrect) {\n        case null:\n          return setStatus('Time Over');\n        case true:\n          return setStatus('Correct');\n        case false:\n          return setStatus('Incorrect');\n        default:\n          return setStatus('No Status');\n      };\n    }\n  \n    return {\n      answerStatus,\n      setAnswerStatus,\n    }\n}\n\nexport function usePlayerTurn(initialValue, playersNames) {\n\n    const [ playerNumberTurn, setPlayerNumberTurn] = useState(initialValue);\n    \n    const playerId = (playerNumberTurn !== -1) ? playersNames[playerNumberTurn].id : playerNumberTurn;\n    const playerName = (playerNumberTurn !== -1) ? playersNames[playerNumberTurn].name : '';\n  \n    function setPlayerTurn (numberOfPlayers, finishedGame = false) {\n\n      if (finishedGame) return setPlayerNumberTurn(-1)\n  \n      if (playerNumberTurn === numberOfPlayers - 1) {\n  \n        setPlayerNumberTurn(0) \n        return;\n  \n      }\n  \n     return setPlayerNumberTurn(playerNumberTurn + 1);\n  \n    }\n\n    function restartTurnCounter() {\n      return setPlayerNumberTurn(initialValue);\n    }\n  \n    return {\n      id: playerId,\n      name: playerName,\n      setPlayerTurn,\n      restartTurnCounter,\n    }\n}\n\nexport function useModalState(initialValue) {\n\n    const [modalState, setModalState] = useState(initialValue);\n  \n    function handleModal() {\n      setModalState(!modalState);\n    }\n  \n    return {\n      modalState,\n      handleModal,\n    };\n}\n\nexport function useHookWithValueAndHandler(initialValue) {\n    const [value, setValue] = useState(initialValue);\n\n    const setValueHandler = (value) => {\n      setValue(value);\n\n      return value;\n    }\n\n    return {\n      value,\n      handler: setValueHandler,\n    }\n}\n\nexport function useQuestionIds(initialId) {\n\n  const [ currId, setCurrId] = useState(initialId);\n  const [ usedQuestionsIds, setUsedQuestionIds] = useState([]);\n  const usedIds = usedQuestionsIds.slice();\n\n  function setCurrentId(difficulty) {\n    const currId = chooseNextIdQuestion(usedIds, difficulty);\n\n    setCurrId(currId);\n  }\n  \n  function setUsedIds() {\n    usedIds.push(currId);\n    setUsedQuestionIds(usedIds);\n\n    return usedIds;\n  }\n\n  const resetAlreadyUsedQuestions = () => setUsedQuestionIds([]);\n\n  return {\n    current: currId,\n    alreadyUsed: usedQuestionsIds,\n    setCurrent: setCurrentId,\n    setAlreadyUsed: setUsedIds,\n    resetAlreadyUsed: resetAlreadyUsedQuestions,\n  }\n}\n\nexport function useGameWinners() {\n\n  const [ gameWinners, setWinners ] = useState(null);\n\n  function setGameWinners(counter) {\n    const winners = getWinners(counter);\n\n    setWinners(winners);\n  }\n\n  const restartWinnersGame = () => setWinners(null);\n\n  return {\n    gameWinners,\n    setGameWinners,\n    restartWinnersGame,\n  }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './css/Modal.scss';\nimport { noop } from '../../functions/general-functions.js'\n\nclass Modal extends Component {\n  \n  constructor(props) {\n    super(props); \n\n    this.divToFocus = null;\n\n    this.setDivFocus = element => {\n      this.divToFocus = element;\n    };\n\n    this.focusDiv = () => {\n      this.divToFocus.focus();\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n\n    if (this.props.modalState && prevProps.modalState !== this.props.modalState) {\n\n      this.focusDiv();\n\n    }\n  }\n\n  closeModalOnKeyPress = (ev) => {\n\n    if (this.props.stopKeyEventPropagation) ev.nativeEvent.stopImmediatePropagation();\n\n    switch (ev.key) {\n      case 'Escape':\n        return (this.props.closeModal) ? this.props.closeModal(ev) : noop();\n      case 'Enter':\n        return (this.props.closeSuccessModal) ? this.props.closeSuccessModal(ev) : noop();\n      default:\n        noop();\n    };\n\n  };\n\n  render() {\n\n    const { modalState, children, title, modalValidation, 'aria-describedby': ariaDescribedBy } = this.props;\n\n    return (\n      <div \n        role='dialog'\n        aria-labelledby='modalDialogTitle'\n        aria-describedby={ariaDescribedBy}\n        ref={this.setDivFocus}\n        tabIndex={1} \n        className={`globalAlert modalEffect ${(modalState) ? 'showModal' : ''} ${(modalValidation) ? '' : 'invalidModal'}`}\n        onKeyDown={(ev) => this.closeModalOnKeyPress(ev)}>\n        <div className='modalContent'>\n          <div className='modalTitleContainer'>\n            <h2 id='modalDialogTitle' className='modalTitle'>{title}</h2>\n          </div>\n          {children}\n        </div>\n      </div>\n      );\n  }\n}\n\nModal.propTypes = {\n  title: PropTypes.string,\n  modalState: PropTypes.bool.isRequired,\n  modalValidation: PropTypes.bool,\n  closeSuccessModal: PropTypes.func,\n  closeModal: PropTypes.func,\n  stopKeyEventPropagation: PropTypes.bool,\n  'aria-describedby': PropTypes.string,\n};\n\nModal.defaultProps = {\n  title: 'Modal',\n  modalState: false,\n  modalValidation: true,\n};\n\nexport default Modal;","import React from 'react';\nimport { Modal } from './index.js';\nimport { Button } from '../Generic';\nimport PropTypes from 'prop-types';\nimport { GameSettings } from '../Game/';\nimport styles from './css/GameSettingsModal.module.scss';\n\nexport default function GameSettingsModal({ \n    handleModal,\n    fields,\n    modalSettings,\n    restartGame,\n    isGameStarted,\n}) {\n\n    const onSuccessButtonHandler = (newState) => {\n        handleModal();\n        \n        if (newState) restartGame(newState);\n    }\n\n    return (\n        <Modal\n            title='Game Settings'\n            aria-describedby='gameSettings'\n            {... modalSettings}    \n        >\n            <GameSettings\n                containerId='gameSettings'\n                isGameStarted={isGameStarted}\n                fields={fields}\n                successButtonHandler={onSuccessButtonHandler}\n                cancelButton={\n                    <Button \n                        text={'Cancel'} \n                        className={styles.alert} \n                        onClick={handleModal}\n                    /> \n                }\n                />\n        </Modal>\n    )\n}\n\nGameSettingsModal.propTypes = {\n    fields: PropTypes.array,\n    restartGame: PropTypes.func,\n    handleModal: PropTypes.func,\n    isGameStarted: PropTypes.bool,\n    modalSettings: PropTypes.shape({\n        modalState: PropTypes.bool.isRequired,\n        modalValidation: PropTypes.bool,\n        closeModal: PropTypes.func,\n        stopKeyEventPropagation: PropTypes.bool,\n    }),\n}","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { \n  QuestionText, \n  OptionsInQuestion, \n  GameWinnersAndTimer, \n  AnswerStatus, \n  PlayersNav, \n  PlayersNavMobile, \n  BelowAnswersContainer,\n  MobileSideNavBar,\n} from './Components/Game';\nimport { GameSettingsModal } from './Components/Modals';\nimport { chooseNextIdQuestion, isGameFinished, handleNextQuestion, createPlayers } from './functions/question-functions.js';\nimport { listOfQuestions } from './Questions/questions.js';\nimport styles from './css/Game.module.scss';\nimport {\n  useModalState,\n  useAnswerStatus,\n  useQuestionIds,\n  usePlayerTurn,\n  useCounterOfCorrectAnswers,\n  useGameWinners,\n} from './Hooks/game-hooks.js';\nimport { NUMBER_OF_QUESTIONS_PER_PLAYER, SECONDS_PER_QUESTION_WITH_TIMER } from './constants.js';\n\nexport default function Game({ fields: settingFields, isGameStarted, setStartGame, playersNames: nameOfPlayers }) {\n\n  const { value: numberOfPlayers, handler: setNumberOfPlayers } = settingFields.find((field) => field.id === 'numberOfPlayers');\n  const { value: difficulty } = settingFields.find((field) => field.id === 'difficulty');\n  const { value: playWithTimer } = settingFields.find((field) => field.id === 'playWithTimer');\n  const { handler: setPlayerNames } = nameOfPlayers;\n\n  const playersNames = setPlayerNames(numberOfPlayers);\n\n  const initialQuestionId = chooseNextIdQuestion([], difficulty);\n\n  const { modalState, handleModal } = useModalState(false);\n  const questionsIds = useQuestionIds(initialQuestionId);\n  const playerTurn = usePlayerTurn(0, playersNames);\n  const counterOfCorrectAnswers = useCounterOfCorrectAnswers(playersNames);\n  const { answerStatus, setAnswerStatus } = useAnswerStatus();\n  const [ansStatusVisibility, setAnsStatusVisibility] = useState(false)\n  const [startTimer, setStartTimer] = useState(playWithTimer);\n  const { gameWinners, setGameWinners, restartWinnersGame } = useGameWinners();\n\n  const players = createPlayers(playersNames, counterOfCorrectAnswers, playerTurn, gameWinners);\n\n  function afterPlayerAnswered(isCorrect) {\n\n    if (isCorrect) counterOfCorrectAnswers.updateCounter(playerTurn.id, isCorrect);\n\n    setAnswerStatus(isCorrect);\n    setAnsStatusVisibility(true);\n\n    if (playWithTimer) setStartTimer(false);\n\n  }\n\n  function whenGameisFinished() {\n\n    setStartGame(false);\n    playerTurn.setPlayerTurn(numberOfPlayers, true);\n    setGameWinners(counterOfCorrectAnswers.counter);\n    setAnsStatusVisibility(false);\n\n  }\n\n  function setNextQuestion() {\n\n    questionsIds.setCurrent(difficulty);\n    setAnsStatusVisibility(false);\n    playerTurn.setPlayerTurn(numberOfPlayers);\n\n    if (playWithTimer) setStartTimer(true);\n\n  }\n\n  function restartGame(newState = {\n    difficulty,\n    playWithTimer,\n    numberOfPlayers,\n  }) {\n\n    const newPlayers = setPlayerNames(+newState.numberOfPlayers)\n\n    restartWinnersGame();\n    counterOfCorrectAnswers.resetCounter(newPlayers);\n    questionsIds.resetAlreadyUsed();\n    playerTurn.restartTurnCounter();\n    setStartTimer(false)\n    setNumberOfPlayers(+newState.numberOfPlayers);\n\n    setStartGame(true);\n    questionsIds.setCurrent(newState.difficulty);\n\n    setStartTimer(newState.playWithTimer);\n\n  }\n\n  const nextQuestionParams = [\n    playersNames.length,\n    () => questionsIds.setAlreadyUsed(),\n    afterPlayerAnswered,\n    whenGameisFinished,\n    setNextQuestion,\n  ];\n\n  const onOptionClick = (isCorrect) => handleNextQuestion(...nextQuestionParams, isCorrect);\n\n  const handlerForTimeOver = () => handleNextQuestion(...nextQuestionParams);\n\n  const { question: questionText, answers, correct: correctOption } = listOfQuestions[questionsIds.current];\n\n  const modalProps = {\n    handleModal,\n    restartGame,\n    isGameStarted,\n    fields: settingFields,\n    modalSettings: {\n      modalState,\n      closeModal: handleModal,\n    },\n  };\n\n  const timerSettings = {\n    initialValue: SECONDS_PER_QUESTION_WITH_TIMER,\n    startTimer,\n    handlerForTimeOver,\n  };\n\n  const isGameOver = isGameFinished(playersNames.length, NUMBER_OF_QUESTIONS_PER_PLAYER, questionsIds.alreadyUsed.length);\n\n  return (\n    <div className={styles.mainContainer}>\n      <div onClick={handleModal} className={`${styles.overlay} ${(modalState) ? styles.showOverlay : ''}`}></div>\n      <main className={styles.gameContainer}>\n        <GameSettingsModal {...modalProps} />\n        <div className={styles.mobile}>\n          <MobileSideNavBar playerTurn={playerTurn}/>\n          <PlayersNavMobile players={players}/>\n        </div>\n        <div className={styles.notMobile}>\n          <PlayersNav players={players} />\n        </div>\n        <GameWinnersAndTimer\n          timerSettings={timerSettings}\n          gameWinners={gameWinners}\n        />\n        <div className={styles.questionsAndAnswersContainer}>\n            <QuestionText text={questionText} />\n            <OptionsInQuestion\n              options={answers}\n              correctOption={correctOption}\n              onClick={onOptionClick}\n              isGameFinished={isGameOver}\n            />\n        </div>\n        <AnswerStatus status={answerStatus} visibility={ansStatusVisibility} />\n        <BelowAnswersContainer handleModal={handleModal} isGameStarted={isGameStarted} restartGame={restartGame}/>\n      </main>\n    </div>\n  );\n}\n\nGame.propTypes = {\n  fields: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.bool,\n      ]),\n      handler: PropTypes.func,\n    }),\n  ),\n  isGameStarted: PropTypes.bool,\n  setStartGame: PropTypes.func,\n}\n","import React, { useState } from 'react';\nimport { GameSettings } from './Components/Game';\nimport { useHookWithValueAndHandler } from './Hooks/game-hooks.js';\nimport { getDifficulties } from './functions/question-functions.js';\nimport { createFieldIds } from './functions/settings-form-functions.js';\nimport Game from './Game.js';\n\nconst names = [\n    {\n        id: 0,\n        name: 'Player 1',\n    },\n    {\n        id: 1,\n        name: 'Player 2',\n    },\n    {\n        id: 2,\n        name: 'Player 3',\n    },\n    {\n        id: 3,\n        name: 'Player 4'\n    },\n];\n\nexport default function App() {\n\n    const [ isGameStarted, setStartGame ] = useState(false);\n    const [ showInitialSettings, setShowInitialSettings ] = useState(true);\n    const numberOfPlayers = useHookWithValueAndHandler(2);\n    const playWithTimer = useHookWithValueAndHandler(false);\n    const difficulty = useHookWithValueAndHandler('Low');\n    const possibleDifficulties = getDifficulties();\n\n    difficulty.possibleDifficulties = possibleDifficulties;\n\n    const fieldsStatesWithIdNames = {\n        numberOfPlayers,\n        playWithTimer,\n        difficulty,\n    }; //Id Names matching after several times. Risk to change!\n\n    const fields = createFieldIds(fieldsStatesWithIdNames);\n    const fieldsArray = Object.keys(fields).map((key => fields[key]));\n\n    const playersNames = { \n        id: 'playersNames',\n        value: names, \n        handler: (numOfPlayers) => names.slice(0, numOfPlayers),\n    };\n\n    const onInitialSettingsButtonClick = () => {\n\n        setShowInitialSettings(false);\n        setStartGame(true);\n\n    }\n\n    const gameSettingsProps = {\n        isGameStarted,\n        fields: fieldsArray,\n        successButtonHandler: onInitialSettingsButtonClick,\n        title: 'Initial Settings',\n    }\n\n    const gameProps = {\n        isGameStarted,\n        playersNames,\n        setStartGame,\n        fields: fieldsArray,\n    };\n\n    const showApp = (showInitialSettings) ? <GameSettings {...gameSettingsProps}/> : <Game {...gameProps}/>;\n\n    return (\n        <React.Fragment>\n            {showApp}\n        </React.Fragment>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}